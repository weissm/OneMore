<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sponsorButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        N/vthX87AAAAAElFTkSuQmCC
</value>
  </data>
</root>